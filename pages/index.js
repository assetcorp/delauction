import React from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Container from 'react-bootstrap/Container'
import Row from 'react-bootstrap/Row'
import Col from 'react-bootstrap/Col'
import Form from 'react-bootstrap/Form'
import Button from 'react-bootstrap/Button'
import Card from 'react-bootstrap/Card'

const Home = () => {

  const [assetURI, setAssetURI] = React.useState( null )
  const [endBidTime, setEndBidTime] = React.useState( null )
  const [revealEndTime, setRevealEndTime] = React.useState( null )
  const [isEnded, setIsEnded] = React.useState( false )
  const [isRevealEnded, setIsRevealEnded] = React.useState( false )
  const [highestBidAmount, setHighestBidAmount] = React.useState( 0.00 )

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          DelAuction â€“ by <a
            href="https://twitter.com/sondelali"
            target="_blank"
            rel="noopener noreferrer">
            Delali
          </a>
        </h1>

        <p className={styles.description}>
          An <code className={styles.code}>ERC-721</code> smart contract application that enables people to bid on a digital asset.
        </p>

        <Container fluid className="mb-4">
          <Row>
            <Col xs={12} md={6}>
              <div className={styles.boxFlexCenter}>
                <Card style={{ width: '200px' }}>
                  <Card.Img variant="bottom" src={assetURI} width="200" height="300" />
                </Card>
              </div>
            </Col>
            <Col xs={12} md={6}>
              <div className={styles.boxFlexCenter} style={{ flexDirection: 'column', height: '100%' }}>
                <div style={{ width: '100%' }}>
                  {
                    ( !isEnded || !isRevealEnded ) && (
                      <div>
                        <p className={styles.textFaded}>Minimum Bid Amount</p>
                        <p className={styles.amountTitle}>
                          <code>
                            0.1 ETH
                          </code>
                        </p>
                      </div>
                    )
                  }

                  {
                    ( !isEnded && !isRevealEnded ) &&
                    (
                      <Form>
                        <Form.Group className="mb-3" controlId="">
                          <Form.Label>Place bid</Form.Label>
                          <Form.Control type="text" placeholder="Enter bid amount" />
                          <Form.Text className="text-muted">
                            This would be hidden until you reveal your bid.
                          </Form.Text>
                        </Form.Group>
                        <Button variant="primary" type="button">
                          Bid
                        </Button>
                      </Form>
                    )
                  } {
                    ( isEnded && !isRevealEnded ) &&
                    (

                      <Button variant="primary" type="button">
                        Reveal your bid
                      </Button>
                    )
                  } {
                    ( isEnded && isRevealEnded ) &&
                    (

                      <div className="mb-3">
                        <p className={styles.textFaded}>Highest Bid</p>
                        <p className={styles.amountTitle}>
                          <code>{Number( highestBidAmount ).toFixed( 2 )} ETH</code>
                        </p>
                      </div>
                    )
                  }
                </div>
              </div>
            </Col>
          </Row>
        </Container>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://twitter.com/sondelali"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by Delali
        </a>
      </footer>
    </div>
  )
}

export default Home